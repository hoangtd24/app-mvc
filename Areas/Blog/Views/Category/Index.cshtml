@using aspnetcoremvc.Models.Blog
@model IEnumerable<aspnetcoremvc.Models.Blog.Category>

@{
    ViewData["Title"] = "Index";
}

<h1>Quản lí danh mục</h1>

<p>
    <a asp-action="Create" class="btn btn-primary btn-small">Tạo danh mục</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParentCategory.Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        await RenderCategory(item, 0);
}
    </tbody>
</table>


@{
    async Task RenderCategory(Category item, int level){
        string prefix = String.Concat(Enumerable.Repeat("&nbsp;&nbsp;", level));
        <tr>
            <td>
                 @Html.Raw(prefix)
                <a asp-action="Edit" asp-route-id="@item.Id">
                @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentCategory.Title)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Chi tiết</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Xóa</a>
            </td>
        </tr>
        if(item.CategoryChildren.Count > 0){
            foreach(var cCategory in item.CategoryChildren){
                await RenderCategory(cCategory, level + 1);
            }
        }
    }
}